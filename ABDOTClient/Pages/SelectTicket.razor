
@page "/SelectTicket"
@namespace SelectTicket
@using SeatSelectionComponent
@using ABDOTClient.Model
@using System.Text.Json
@using ABDOTClient.Data
@inject NavigationManager NavigationManager
@inject IPlayService PlayService

<style>
    .c--background {
        background: #000 center/cover url(@backgroundSrc) no-repeat;
    }
</style>
<section>
    <div style="margin-left:100px">
        <p>1. Choose tickets > 2. Payment > 3. Invoice</p>
    </div>
</section>
<div class="position-relative">
    <section class="header" >
        <div class=" c--background" style="">
            <div class="header-top">
                <div class="header-title">
                    @play.Movie.Title
                </div>
            </div>
            <div class="header-text row">
                <div class="header-info col-12">
                    <div class="header-topic">
                        Date: 
                    </div>
                    <div class="header-description">
                         @play.Date 
                    </div>
                </div>
                <div class="header-info col-12">
                    <div class="header-topic">
                        Tickets:
                    </div>
                    <div class="header-description">
                        @selectedSeats.Count
                    </div>
                </div>
                <div class="header-info col-12">
                    <div class="header-topic">
                        Location:
                    </div>
                    <div class="header-description">
                        @play.Hall.Branch.City HorizonXX, Hall Id
                    </div>
                </div>
            </div>
        </div>
    </section>
     <div class="inner-container"> 
    
        <div class="seat-selection">
            <div class="container">
                <div class="section-separate">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="section-title">
                                Selected seats:
                            </div>
                            <div class="section-text">
                                @foreach (var item in selectedSeats)
                                {
                                    <div class="seat-select-choice">
                                        <div class="seat-select-choice-key">
                                            Seat:
                                        </div>
                                        <div class="seat-select-choice-value">
                                            Row: @item.Item1 Column: @item.Item2
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="col-md-6">
                            <SeatSelection OnClick="ClickHandler"/>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="ticket-confirmation">
            <div class="container">
                <div class="row">
                    <div class="col-md-12 section-title">
                        buy tickets
                    </div>
                    <div class="col-xl-6">
                        <div class="section-text">
                            <p>we might want to put some text here, idk depends on the payment gate</p>
                        </div>
                        <button class="btn btn--outline-white" @onclick="@GoSomewhere">Next</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Play play { get; set; }
        private const string backgroundSrc = "/css/images/ticket-background.gif";
    private IList<Tuple<int,int>> selectedSeats;
    
    [Parameter] public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        
        selectedSeats = new List<Tuple<int, int>>();
    }

    private void ClickHandler(Tuple<int, int> newSeat)
    {
        if (selectedSeats.Contains(newSeat))
        {
            selectedSeats.Remove(newSeat);
        }
        else
        {
            selectedSeats.Add(newSeat);
        }
    }

    private void GoSomewhere()
    {
        string selectedSeatsJson = JsonSerializer.Serialize(selectedSeats);
        NavigationManager.NavigateTo($"/checkoutInfo/{selectedSeatsJson}");
    }

    
}
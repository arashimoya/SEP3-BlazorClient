@page "/addmovie"
@using ABDOTClient.Model
@using ABDOTClient.Data
@using ABDOTClient.Pages.Administration
@inject NavigationManager NavigationManager
@namespace AddMovieComponent
<h3>Add Movie</h3>
<EditForm Model="@newMovieItem" OnValidSubmit="@AddNewMovie">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
<div class="form-group">
    Title:<br/>
    <InputText @bind-Value="newMovieItem.Title"/>
</div>
<div class="form-group">
    Director:<br/>
    <InputText @bind-Value="newMovieItem.Director"/>
</div>
<div class="form-group">
    Description:<br/>
    <InputTextArea @bind-Value="newMovieItem.Description"/>
</div>
<div class="form-group">
    Genre:<br/>
    <InputText @bind-Value="newMovieItem.Genre"/>
</div>
<div class="form-group">
    Language:<br/>
    <InputText @bind-Value="newMovieItem.Language"/>
</div>
<div class="form-group">
    Year of release:<br/>
    <InputNumber @bind-Value="newMovieItem.Year"/>
</div>
<div class="form-group">
    Length:<br/>
    <InputNumber @bind-Value="newMovieItem.LengthInMinutes"/>
</div>

    <h4>Cast</h4>
    @* <button @onclick="AddValue" class="btn btn--black btn--outline-white">Add actor</button> *@
    @* @for (int i = 0; i < newMovieItem.Cast.Count; i++) *@
    @* { *@
    @*     int index = i; *@
    @*     <div> *@
    @*         <InputText @bind-Value="newMovieItem.Cast[index].Name"/> *@
    @*         <button @onclick="()=>RemoveValue(index)" class="btn btn--outline-white btn--black">-</button> *@
    @*     </div> *@
    @* } *@
    <p class="actions">
            <button class="btn btn-dark" type="submit">Submit</button>
        </p>
</EditForm>
@code {
    private Movie newMovieItem = new Movie();
    private IMovieService CloudMovieService = new CloudMovieService();
    private string confirmationMessage = "";

    // private void AddValue()
    // {
    //     newMovieItem.Cast.Add(new Actor(""));
    // }
    //
    // private void RemoveValue(int i)
    // {
    //     newMovieItem.Cast.RemoveAt(i);
    // }

    private async Task AddNewMovie()
    {
        if (await CloudMovieService.AddMovieAsync(newMovieItem))
        {
            confirmationMessage = "Success";
            NavigationManager.NavigateTo($"/movielist{confirmationMessage}");
            
        }
    }
    protected override Task OnInitializedAsync()
    {
        
        return base.OnInitializedAsync();
    }

}
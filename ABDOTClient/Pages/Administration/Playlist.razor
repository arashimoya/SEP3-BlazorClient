@page "/playlist/{confirmationMessage}"
@namespace ABDOTClient.Pages.Administration
@inject NavigationManager NavigationManager
@inject IPlayService PlayService
@using ABDOTClient.Model
@using Data

<style>
    html, body {
        background-color: white;
        color: black;
    }
</style>
@if (playsToShow == null)
{
    <p>
        <em>Loading...</em>
    </p>
} else if (!playsToShow.Any()){
    <p>
        <em>No Play items exist. Please add some</em>
        <div class="col-sm-4" @onclick="@(()=> NavigationManager.NavigateTo("/addplay"))"><button>
                        <i class="oi oi-plus"/>
                    </button>
                        </div>
    </p>
}
else
{
    <div class="container" style="background-color: white">
    <p style="color: green;">@confirmationMessage</p>
        <div class="section-separate" style="padding-top:40px">
            <button style="border-color: transparent; background-color:transparent">
            <i class="oi oi-arrow-left" @onclick="@(()=>NavigationManager.NavigateTo("/admin"))"/>
            </button>
        </div>
    <h3 style="color:black">Playlist</h3>
        <p style="color:black">for operators</p>
        <div class="row">
            <div class="col-sm-4" @onclick="@(()=> NavigationManager.NavigateTo("/addplay"))"><button>
                <i class="oi oi-plus"/>
            </button>
                </div>
        </div>
    <table class="table" style="color:black; border-color: black">
        <thead>
        <tr>
            <th>ID</th>
            <th>Movie</th>
            <th>Date</th>
            <th>Branch</th>
            <th>Hall</th>
            <th>Edit</th>
            <th>Remove</th>
            
        </tr>
        </thead>
        <tbody>
        @foreach (var item in playsToShow)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.Movie.Title</td>
                <td>@item.Date</td>
                <td>@item.Hall.Branch.City</td>
                <td>@item.Hall.Id</td>
                <td>
                    <button @onclick="@(() => Edit(item.Id))">
                        <i class="oi oi-pencil" style="color:blue"/>
                    </button>
                </td>
                <td>
                    <button @onclick="@(() => RemovePlay(item.Id))">
                        <i class="oi oi-trash" style="color:red"/>
                    </button>
                </td>
                
                
                
            </tr>
        }
        </tbody>
    </table>
    </div>
}
@code {
    private IList<Play> plays;
    private IList<Play> playsToShow;
    [Parameter]public string confirmationMessage { get; set; }

    protected override async Task OnInitializedAsync() {
        plays = new List<Play>();
        
        plays = await PlayService.GetAllAsync();
        playsToShow = plays;
        if (!confirmationMessage.Contains("success")) {
            confirmationMessage = " ";
        }
    }
    
    private async Task RemovePlay(int Id)
    {
        Play toRemove = plays.FirstOrDefault(p => p.Id == Id);
        if (toRemove != null) {
            plays.Remove(toRemove);
            playsToShow.Remove(toRemove);
            if (await PlayService.RemovePlayAsync(Id)) {
                confirmationMessage = "Play deleted successfully";
            }
        }
    }

    private void Edit(int id)
    {
        Console.WriteLine(id);
        NavigationManager.NavigateTo($"EditPlay/{id}");
        
    }
    

}
@page "/addpersonel"
@using ABDOTClient.Model
@using ABDOTClient.Data
@using ABDOTClient.Pages.Administration
@using Microsoft.AspNetCore.Components
@inject NavigationManager NavigationManager
@namespace AddEmployeeComponent
<h3>Add new employee</h3>
<EditForm Model="@newEmployeeItem" OnValidSubmit="@AddNewEmployee">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group">
    First name:<br/>
    <InputText @bind-Value="newEmployeeItem.FirstName"/>
    </div>
    <div class="form-group">
    Last name:<br/>
    <InputText @bind-Value="newEmployeeItem.LastName"/>
    </div>
    <div class="form-group">
    Password:<br/>
    <InputText @bind-Value="newEmployeeItem.Password"/>
    </div>
    <div class="form-group">
    Email:<br/>
    <InputText @bind-Value="newEmployeeItem.Email"/>
    </div>
    <div class="form-group">
        Country:<br/>
        <InputText @bind-Value="newEmployeeItem.Country"/>
    </div>
    <div class="form-group">
        City:<br/>
        <InputText @bind-Value="newEmployeeItem.City"/>
    </div>
    <div class="form-group">
            Postcode:<br/>
            <InputText @bind-Value="newEmployeeItem.Postcode"/>
        </div>
    <div class="form-group">
        Street:<br/>
        <InputText @bind-Value="newEmployeeItem.Street"/>
    </div>
    <div class="form-group">
        Date of birth:<br/>
        <InputDate @bind-Value="newEmployeeItem.Birthday"/>
    </div>
    <div class="form-group">
        CPR Number:<br/>
        <InputText @bind-Value="newEmployeeItem.CPR"/>
    </div>
    <div class="form-group">
        Role:<br/>
        <CustomInputSelect @bind-Value="newEmployeeItem.Role">
            <option value="0">Owner</option>
            <option value="1">Manager</option>
            <option value="2">Operator</option>
        </CustomInputSelect>
    </div>
    <div class="form-group">
                Branch:<br/>
                <InputSelect @bind-Value="branchid">
                    @if (branches != null)
                    {
                        @foreach (var item in branches)
                        {
                            <option value="@item.Id">@item.City</option>
                        }
                    }
                </InputSelect>
            </div>
    
    <p class="actions">
            <button class="btn btn-dark" type="submit">Submit</button>
        </p>
</EditForm>
@code {
    private Employee newEmployeeItem = new Employee();
    private IEmployeeService employeeService = new EmployeeCloudService();
    private string confirmationMessage = "";
    private IBranchService BranchService = new BranchCloudService();
    private IList<Branch> branches;
    
    
    private int branchid
    {
        get => newEmployeeItem.Branch.Id;

        set => newEmployeeItem.Branch = branches.Single(c => c.Id == value);
    }
    
    private async Task AddNewEmployee()
    {
        if (await employeeService.CreateEmployee(newEmployeeItem))
        {
            confirmationMessage = "Success";
            NavigationManager.NavigateTo($"/personel");
            
        }
     
    }
    protected override async Task OnInitializedAsync()
    {
        
        newEmployeeItem.Branch = new Branch();
        branches = new List<Branch>();
        if (!branches.Any())
        {
            branches =  await BranchService.GetAllBranches();
        }
    }

}
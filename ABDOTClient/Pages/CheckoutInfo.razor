@page "/checkoutInfo/{Id:int}/{selectedSeatsJson}"
@using System.Text.Json
@using ABDOTClient.Authentication
@using ABDOTClient.Data
@using ABDOTClient.Model
@inject IPlayService PlayService
@inject ITicketService TicketService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@using LoginComponent

<style>
    .c--background {
        background: #000 center/cover url(@backgroundSrc) no-repeat;
    }
</style>
<section>
    <div style="margin-left:100px">
        <span>1. Choose Seats > <text style="font-weight: 700">2. Payment </text> 3. Invoice</span>
    </div>
</section>
    <section class="header">
        <div class=" c--background" style="">
            <div class="header-top">
                <div class="header-title">
                    @play.Movie.Title
                </div>
            </div>
            <div class="header-text row">
                <div class="header-info col-12">
                    <div class="header-topic">
                        Date:
                    </div>
                    <div class="header-description">
                        @play.Date
                    </div>
                </div>
                <div class="header-info col-12">
                    <div class="header-topic">
                        Tickets:
                    </div>
                    <div class="header-description">
                        @selectedSeats.Count
                    </div>
                </div>
                <div class="header-info col-12">
                    <div class="header-topic">
                        Location:
                    </div>
                    <div class="header-description">
                         HorizonXX, @play.Hall.Id
                    </div>
                </div>
            </div>
        </div>
    </section>
<div class="container">
    <h3>CheckoutInfo</h3>
    
            <div class="section-separate">
                <div class="form-group">
                    Email:<br/><input type="text" @bind-value="email"/>
                </div>
                <div class="form-group">
                    First Name:<br/><input type="text" @bind-value="firstName"/>
                </div>
                <div class="form-group">
                    Last Name:<br/><input type="text" @bind-value="lastName"/>
                </div>
            </div>
      
    <p style="color:red">@errorMessage</p>
    @foreach (var item in selectedSeats) 
    {
        <div class="seat-select-choice">
            <div class="seat-select-choice-key">
                Seat:
            </div>
            <div class="seat-select-choice-value">
                Row: @item.Item1 Column: @item.Item2
            </div>
        </div>
    }
    
</div>
<button class="btn btn--outline-white" @onclick="@GoToInvoice">Next</button>

@code {
    [Parameter] public string selectedSeatsJson { get; set; }
    [Parameter] public int Id { get; set; }
    public IList<Ticket> tickets;
    private Play play = new Play();
    private string firstName;
    private string lastName;
    private string email;
    private Invoice invoice;
    private const string backgroundSrc = "/css/images/ticket-background.gif";
    private string errorMessage = "";
    
    private IList<Tuple<int, int>> selectedSeats => JsonSerializer.Deserialize<IList<Tuple<int,int>>>(selectedSeatsJson);

    protected override async Task OnInitializedAsync() {
        invoice = new Invoice();
        tickets = new List<Ticket>();
        play.Movie = new Movie();
        play.Hall = new Hall();
        play = await PlayService.GetAsync(Id);
    }


    private async Task GoToInvoice() {
        if (!string.IsNullOrEmpty(email)|| !string.IsNullOrEmpty(lastName) || !string.IsNullOrEmpty(firstName)) {
            invoice.Seats = selectedSeats;
            invoice.Email = email;
            invoice.Date = play.Date;
            invoice.Hall = play.Hall.Id.ToString();
            invoice.Movie = play.Movie.Title;
            invoice.FirstName = firstName;
            invoice.LastName = lastName;
            foreach (var seat in selectedSeats) {
                TicketService.AddTicket(
                    new Ticket()
                    {
                        Column = seat.Item2,
                        Row = seat.Item2,
                        Employee = new Employee()
                        {
                            Id = 0,
                        },
                        Play = play,
                    });
            }
            string InvoiceJson = JsonSerializer.Serialize(invoice);
            NavigationManager.NavigateTo($"/InvoiceInfo/{InvoiceJson}");
        }
        else {
            errorMessage = "Please enter your information!";
        }
    }

    private class Invoice {
        public Invoice() {
            Seats = new List<Tuple<int, int>>();
        }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Email { get; set; }
        public IList<Tuple<int,int>> Seats { get; set; }
        public string Date { get; set; }
        public string Movie { get; set; }
        public string Hall { get; set; }
    }
}
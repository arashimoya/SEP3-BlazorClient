@page "/"
@using ABDOTClient.Data
@using ABDOTClient.Model
@namespace Programme
@inject IBranchService BranchService
@inject NavigationManager NavigationManager
@using HCarouselComponent


<style>
    body {
        padding-top: 40px;
    }
    .carousel-slide-custom{
        background-size: contain;
        position: relative;
        
    }
    .carousel-inner{
        
    }
    .carousel-caption-custom{
        position: absolute;
        right:15%;
        bottom:20px;
        left:15%;
        z-index:10;
        padding-top:20px;
        padding-bottom:20px;
        color:#fff;
        text-align:center;
    }
    .carousel-img{
        width: 100%;
        height: auto;
        overflow: hidden;
        object-fit: cover;
        max-height: 550px;
        border-radius: 10px;
        
    }
    
   
    
</style>

<Carousel/>
<div class="section" >
    <div class="container">
        <h1 id="programme-header-now" class="">playing now</h1>
        <div class="program row">
            <div class="date-list col-sm-8 hidden-xs-down">
                <div class="row"> <!-- basically a week through -->
                    @for(int i=0;i<=7;i++)
                    {
                        var tempint = i;
                        <div class="col-sm-6 col-md-4 col-lg-3">
                            <a class="date-list-link btn btn--black btn--outline-white btn--small btn--full btn--hover date-list-active"
                               @onclick="()=>SelectDay(DateTime.Today.Date.AddDays(tempint))">@today.AddDays(tempint).ToString(dateFormat)</a>
                        </div>
                    }
                </div>
            </div>
            <div class="col-sm-4">
                <div>
                    <select class="header-selectpicker" value="@selectedBranch" @onchange="@SelectBranch">
                        @foreach (var branch in branches)
                        {
                            <option>@branch.City</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="section row">
            @foreach (var play in plays)
            {
                <div class="col-md-3 col-sm-6 col-xl-3 movie-list-item" @onclick="@(() => GoToMovie(play.Id) )">
                    <div class="movie-list">
                        <div class="movie-list-poster movie-list-upcoming "><img src=@play.Movie.PosterSrc/>
                        </div>
                        <div class="movie-list-top-content">
                            <h4 class="movie-list-title">@play.Movie.Title</h4>
                            <div>
                                <h5 class="section-label">Director</h5>
                                <p>@play.Movie.Director</p>
                                <h5 class="section-label">Genre</h5>
                                <p>@play.Movie.Genre</p>
                            </div>
                        </div>
                        <div class="movie-list-bottom-content">
                            <div>
                                <p class="section-label">Premiere</p>
                                <p class="movie-list-date">@play.Movie.Year</p>
                            </div>
                        </div>
                    </div>
                </div>
                
            }
            @plays.Count;
        </div>
    </div>
    @selectedBranch
    @selectedDay
</div>

@code{
    private DateTime today { get; set; }= DateTime.Now;
    private string dateFormat = "dddd, dd/MM";
    private string selectedBranch;
    private string selectedDay;
    private IList<Branch> branches = new List<Branch>();
    private IList<Play> plays = new List<Play>();
    
    
    
    protected async override Task OnInitializedAsync()
    {
        branches = await BranchService.GetAllBranches();
        selectedBranch = "Aarhus";
        selectedDay = today.ToString(dateFormat);

        // foreach (var branch in branches)
        // {
        //     foreach (var hall in branch.Halls)
        //     {
        //         foreach (var play in hall.Programme)
        //         {
        //             plays.Add(play);
        //         }
        //     }
        // }
        Seed();
    }

    private void SelectBranch(ChangeEventArgs args)
    {
        if(args!=null)
        selectedBranch = args.Value.ToString();
    }

    private void SelectDay(DateTime date)
    {
        selectedDay = date.ToString(dateFormat);
    }

    private void GoToMovie(int id)
    {
        NavigationManager.NavigateTo($"EditEmployee/{id}");
    }
    
    private void Seed()
    {
        Play[] playArray =
        {
            new Play
            {
                Movie = new Movie
                {
                    Description = "The 1930s. A bankrupt director and a starving actress travel to the mysterious Skull Island to shoot a movie of their life, as New York is in a great crisis. ",
                    Director = "Peter Jackson",
                    Genre = "Adventure, Melodrama, Fantasy",
                    Language = "English",
                    LengthInMinutes = 200,
                    Year = 2005,
                    Title = "King Kong",
                    PosterSrc = "/images/king_kong.jpg",
                },
                Date = DateTime.Now,
                Hall = new Hall(1),
                Tickets = new List<Ticket>
                {
                    
                },
                TimeInMinutes = 200,
            },
            new Play
            {
                Date = DateTime.Now,
                Hall = new Hall(2),
                Movie = new Movie
                {
                    Title = "Forrest Gump",
                    Director = "Robert Zemeckis",
                    Genre = "Drama / Comedy",
                    Year = 2004,
                    Description = "The life story of Forrest, a boy with a low IQ with paralysis, who becomes a billionaire and a hero of the Vietnam War.",
                    Language = "English",
                    LengthInMinutes = 186,
                    PosterSrc = "/images/forrest_gump.jpg",
                },
                Tickets = new List<Ticket>(),
                TimeInMinutes = 186,
            },
            new Play
            {
                Date = DateTime.Now,
                Hall = new Hall(3),
                Movie = new Movie
                {
                    Description = "To get his home back, an ugly ogre with a talkative donkey sets off to free the beautiful princess.",
                    Title = "Shrek",
                    Director = "Andrew Adamson / Vicky Jenson",
                    Genre = "Comedy, Animation, Family",
                    Language = "English, Danish",
                    LengthInMinutes = 90,
                    Year = 2001,
                    PosterSrc = "/images/shrek.jpg",
                },
                Tickets = new List<Ticket>(),
                TimeInMinutes = 90,
            },
            new Play
            {
                Date = DateTime.Now,
                Hall = new Hall(1),
                Movie = new Movie
                {
                    //Id = 3,
                    Title = "Shawshank Redemption",
                    // Cast = new List<Actor>(),
                    Description =
                        "Adaptation of a Stephen King short story. A banker who is wrongly sentenced to life imprisonment, tries to survive in a brutal prison world. ",
                    Director = "Frank Darabont",
                    Genre = "Drama",
                    Language = "English",
                    LengthInMinutes = 110,
                    Year = 1994,
                    PosterSrc = "/images/shawshank.jpg"
                },
                Tickets = new List<Ticket>(),
                TimeInMinutes = 110,
            },
        };
        plays = playArray.ToList();

    }

}